/*添加学生函数*/
void s_insert(student *head){
	while (1){
		char input[50];
		while (1){
			printf("\n\t\t请输入要添加学生的学号(数字)，返回上级菜单请输入0000：");
			scanf("%s", input);
			while (getchar() != '\n');
				if (judge_ascii_num(input) == 1)
					break;
				else
					printf("\n\t\t####输入错误！#####");
		}
		if (strcmp(input, "0000") == 0)
			break;
		if (studentnamefind_num(stu_head, input) != stu_tail){
			printf("\t\t###已存在该学生,请重新输入!####\n");
			continue;
		}
  
	/*初始化学生信息*/
	student* p = (student *)malloc(sizeof(student));
	strcpy(p->num, input);
	printf("\t\t请输入学生姓名:");
	scanf("%s", p->name);
	while (getchar() != '\n');
		printf("\t\t请输入当前该学生总学分:");
	p->score_all = input_double();
	p->course_sum = 0;
	p->score_sel = 0.0;
	strcpy(p->password, p->num);
	//当前链表中没有节点
	if (stu_head == NULL){
		p->next = NULL;
		stu_head = p;
		stu_tail = p;
	}
	else{
		//新增节点的标号比头节点还小
		if (strcmp(p->num, stu_head->num) < 0){
			p->next = stu_head;
			stu_head = p;
		}
		//新增节点的标号比尾节点还大
		else if (strcmp(p->num, stu_tail->num) > 0){
			p->next = NULL;
			stu_tail->next = p;
			stu_tail = p;
		}
		else{
			student* temp = stu_head;
			while (temp != stu_tail){
				if (strcmp(p->num, temp->num) > 0){
					p->next = temp->next;
					temp->next = p;
					break;
				}
			}
		}
	}
	printf("\n\t\t学生信息录入成功!\n");
}
  
 store_stu(stu_head);
}

